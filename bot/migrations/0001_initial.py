# Generated by Django 5.2.2 on 2025-08-09 21:20

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='MandatoryChannel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Kanal nomi')),
                ('telegram_id', models.CharField(blank=True, help_text='Chat ID yoki @username', max_length=100, null=True, verbose_name='Telegram ID')),
                ('link', models.URLField(blank=True, help_text='Kanalga kirish havola', null=True, verbose_name='Kanal havola')),
                ('is_telegram', models.BooleanField(default=True, help_text='Bu Telegram kanali yoki boshqa platforma', verbose_name='Telegram kanali')),
                ('is_private', models.BooleanField(default=False, help_text='Bu yopiq kanal (invite link orqali)', verbose_name='Yopiq kanal')),
                ('is_active', models.BooleanField(default=True, help_text='Kanal faolmi', verbose_name='Faol')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Yaratilgan sana')),
            ],
            options={
                'verbose_name': 'Majburiy kanal',
                'verbose_name_plural': 'Majburiy kanallar',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Kurslar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Kurs uchun nom bering', max_length=500, verbose_name='Kurs nomi')),
                ('price', models.DecimalField(decimal_places=2, help_text="Kurslar uchun to'lov narxi", max_digits=10, verbose_name='Kurslar narxi')),
                ('description', models.TextField(help_text='Kurs uchun tavsif bering', verbose_name='Kurs uchun tavsif')),
                ('level', models.CharField(choices=[('level_0', '0-bosqich'), ('level_1', '1-bosqich'), ('level_2', '2-bosqich'), ('level_3', '3-bosqich'), ('level_4', '4-bosqich'), ('level_5', '5-bosqich'), ('level_6', '6-bosqich'), ('level_7', '7-bosqich')], help_text='Kurs bosqichi (Har bir bosqichda 1 ta kurs)', max_length=20, verbose_name='Kurs darajasi')),
                ('private_channel', models.URLField(help_text='Kurs uchun yopiq kanal  joylang', verbose_name='Kurs uchun yopiq kanal')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Boshlanish vaqti')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Tugash vaqti')),
                ('is_active', models.BooleanField(default=True, help_text="Kurs faolmi yoki yo'qmi", verbose_name='Faoliyat holati')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Kurs qachon yaratilgan', verbose_name='Yaratilgan sana')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Kurs qachon yangilangan', verbose_name='Yangilangan sana')),
            ],
            options={
                'verbose_name': 'Kurs',
                'verbose_name_plural': 'Kurslar',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['name'], name='bot_kurslar_name_a6f25c_idx'), models.Index(fields=['is_active'], name='bot_kurslar_is_acti_efa2d3_idx')],
            },
        ),
        migrations.CreateModel(
            name='PrivateChannel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Kanal nomi')),
                ('telegram_id', models.CharField(help_text='Kanalning Chat ID', max_length=100, verbose_name='Telegram ID')),
                ('invite_link', models.URLField(help_text='Kanalga taklif qilish uchun havola', verbose_name='Taklif havola')),
                ('is_active', models.BooleanField(default=True, verbose_name='Faol')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Yaratilgan sana')),
                ('kurslar', models.ForeignKey(help_text='Bu yopiq kanal qaysi konkurs uchun', on_delete=django.db.models.deletion.CASCADE, related_name='private_channels', to='bot.kurslar', verbose_name='kurslar')),
            ],
            options={
                'verbose_name': 'Yopiq kanal',
                'verbose_name_plural': 'Yopiq kanallar',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TelegramUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telegram_id', models.CharField(help_text='Foydalanuvchining Telegram ID', max_length=50, unique=True, verbose_name='Telegram ID')),
                ('full_name', models.CharField(help_text="Foydalanuvchining To'liq Ismi", max_length=200, verbose_name="To'liq Ism")),
                ('age', models.CharField(choices=[('18-24', '18-24'), ('25-34', '25-34'), ('35-44', '35-44'), ('45+', '45+')], help_text='Foydalanuvchining yoshi', max_length=10, verbose_name='Yoshi')),
                ('level', models.CharField(choices=[('level_0', '0-bosqich'), ('level_1', '1-bosqich'), ('level_2', '2-bosqich'), ('level_3', '3-bosqich'), ('level_4', '4-bosqich'), ('level_5', '5-bosqich'), ('level_6', '6-bosqich'), ('level_7', '7-bosqich')], help_text='Foydalanuvchi darajasi', max_length=20, verbose_name='Foydalanuvchi darajasi')),
                ('phone_number', models.CharField(help_text='Foydalanuvchining telefon raqami', max_length=20, unique=True, verbose_name='Telefon raqami')),
                ('telegram_username', models.CharField(blank=True, help_text='Foydalanuvchining Telegram foydalanuvchi nomi', max_length=50, null=True, verbose_name='Telegram foydalanuvchi nomi')),
                ('region', models.CharField(choices=[('tashkent', 'Toshkent'), ('samarkand', 'Samarqand'), ('bukhara', 'Buxoro'), ('andijan', 'Andijon'), ('fergana', "Farg'ona"), ('namangan', 'Namangan'), ('kashkadarya', 'Qashqadaryo'), ('surkhandarya', 'Surxondaryo'), ('khorezm', 'Xorazm'), ('navoi', 'Navoiy'), ('jizzakh', 'Jizzax'), ('sirdarya', 'Sirdaryo'), ('karakalpakstan', "Qoraqalpog'iston")], help_text='Foydalanuvchining yashash joyi', max_length=50, verbose_name='Yashash joyi')),
                ('profession', models.CharField(help_text='Foydalanuvchining kasbi yoki faoliyati', max_length=100, verbose_name='Kasb yoki faoliyat')),
                ('gender', models.CharField(choices=[('M', 'Erkak'), ('F', 'Ayol')], help_text='Foydalanuvchining jinsi', max_length=1, verbose_name='Jins')),
                ('registration_date', models.DateTimeField(auto_now_add=True, help_text="Foydalanuvchi ro'yxatdan o'tgan sana", verbose_name="Ro'yxatdan o'tgan sana")),
                ('referral_code', models.CharField(blank=True, help_text='Foydalanuvchining referral kodi (taklif qilish uchun)', max_length=50, null=True, unique=True, verbose_name='Referral kod')),
                ('referral_count', models.PositiveIntegerField(default=0, help_text='Foydalanuvchini taklif qilganlar soni', verbose_name='Taklif qilganlar soni')),
                ('is_confirmed', models.BooleanField(default=False, help_text='Foydalanuvchi tasdiqlanganmi', verbose_name='Tasdiqlangan')),
                ('confirmation_date', models.DateTimeField(blank=True, help_text='Foydalanuvchi tasdiqlangan sana', null=True, verbose_name='Tasdiqlangan sana')),
                ('is_admin', models.BooleanField(default=False, help_text='Foydalanuvchi adminmi', verbose_name='Admin')),
                ('is_blocked', models.BooleanField(default=False, verbose_name='Bloklangan')),
                ('confirmed_by', models.ForeignKey(blank=True, help_text='Foydalanuvchini kim tasdiqlagan', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='confirmed_users', to='bot.telegramuser', verbose_name='Tasdiqlovchi')),
                ('invited_by', models.ForeignKey(blank=True, help_text='Foydalanuvchini kim taklif qilgan', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='referrals', to='bot.telegramuser', verbose_name='Taklif qiluvchi')),
            ],
            options={
                'verbose_name': 'Telegram Foydalanuvchisi',
                'verbose_name_plural': 'Telegram Foydalanuvchilari',
                'ordering': ['-registration_date'],
            },
        ),
        migrations.CreateModel(
            name='Payments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, help_text="To'lov miqdori", max_digits=10, verbose_name="To'lov miqdori")),
                ('payment_screenshot', models.ImageField(blank=True, help_text="To'lov skrinshoti (agar mavjud bo'lsa)", null=True, upload_to='payments', verbose_name="To'lov skrinshoti")),
                ('payment_type', models.CharField(choices=[('KONKURS', "Konkurs to'lovi"), ('COURSE', "Kurs to'lovi"), ('DONATION', "Xayriya to'lovi")], default='KONKURS', help_text="To'lov turi: Konkurs, Kurs yoki Xayriya", max_length=20, verbose_name="To'lov turi")),
                ('status', models.CharField(choices=[('PENDING', 'Kutilmoqda'), ('CONFIRMED', 'Tasdiqlangan'), ('REJECTED', 'Rad etilgan')], default='PENDING', help_text="To'lov holati: Kutilmoqda, Tasdiqlangan yoki Rad etilgan", max_length=20, verbose_name="To'lov holati")),
                ('payment_date', models.DateTimeField(auto_now_add=True, help_text="To'lov amalga oshirilgan sana", verbose_name="To'lov sanasi")),
                ('confirmed_date', models.DateTimeField(blank=True, help_text="To'lov qachon tasdiqlangan", null=True, verbose_name='Tasdiqlangan sana')),
                ('rejection_reason', models.TextField(blank=True, help_text="Agar to'lov rad etilgan bo'lsa, sababi", null=True, verbose_name='Rad etish sababi')),
                ('is_confirmed', models.BooleanField(default=False, help_text='Bu maydon status maydoni bilan almashtirildi', verbose_name='Tasdiqlangan (eski)')),
                ('course', models.ForeignKey(blank=True, help_text="To'lov qilingan kurs", null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='bot.kurslar', verbose_name='Kurs')),
                ('confirmed_by', models.ForeignKey(blank=True, help_text="To'lovni kim tasdiqlagan", null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='confirmed_payments', to='bot.telegramuser', verbose_name='Tasdiqlovchi admin')),
                ('user', models.ForeignKey(help_text="To'lov qilgan foydalanuvchi", on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='bot.telegramuser', verbose_name='Foydalanuvchi')),
            ],
            options={
                'verbose_name': "To'lov",
                'verbose_name_plural': "To'lovlar",
                'ordering': ['-payment_date'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('PAYMENT_PENDING', "To'lov kutilmoqda"), ('PAYMENT_CONFIRMED', "To'lov tasdiqlandi"), ('PAYMENT_REJECTED', "To'lov rad etildi"), ('KONKURS_JOINED', "Konkursga qo'shildi"), ('CHANNEL_INVITATION', 'Kanalga taklif'), ('SYSTEM_MESSAGE', 'Tizim xabari')], max_length=20, verbose_name='Bildirish turi')),
                ('title', models.CharField(max_length=255, verbose_name='Sarlavha')),
                ('message', models.TextField(verbose_name='Xabar')),
                ('is_read', models.BooleanField(default=False, verbose_name="O'qilgan")),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Yaratilgan sana')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name="O'qilgan sana")),
                ('extra_data', models.JSONField(blank=True, help_text="Bildirish bilan bog'liq qo'shimcha ma'lumotlar", null=True, verbose_name="Qo'shimcha ma'lumot")),
                ('recipient', models.ForeignKey(help_text='Bildirishni qabul qiluvchi foydalanuvchi', on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='bot.telegramuser', verbose_name='Qabul qiluvchi')),
                ('sender', models.ForeignKey(blank=True, help_text="Bildirishni jo'natgan foydalanuvchi (admin)", null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_notifications', to='bot.telegramuser', verbose_name="Jo'natuvchi")),
            ],
            options={
                'verbose_name': 'Bildirishnoma',
                'verbose_name_plural': 'Bildirishnomalar',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CourseParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joined_date', models.DateTimeField(auto_now_add=True, help_text="Kurs ishtirokchisi qo'shilgan sana", verbose_name="Qo'shilgan sana")),
                ('private_channel_invited', models.BooleanField(default=False, help_text='Kurs ishtirokchisi yopiq kanalga taklif qilinganmi', verbose_name='Yopiq kanalga taklif qilingan')),
                ('course', models.ForeignKey(help_text='Kurs ishtirokchisi kursi', on_delete=django.db.models.deletion.CASCADE, related_name='course_participants', to='bot.kurslar', verbose_name='Kurs')),
                ('payment', models.OneToOneField(help_text="Kurs ishtirokchisi to'lovi", on_delete=django.db.models.deletion.CASCADE, related_name='course_participant_payments', to='bot.payments', verbose_name="To'lov")),
                ('user', models.ForeignKey(help_text='Kurs ishtirokchisi foydalanuvchisi', on_delete=django.db.models.deletion.CASCADE, related_name='course_participants_users', to='bot.telegramuser', verbose_name='Foydalanuvchi')),
            ],
            options={
                'verbose_name': 'Kurs ishtirokchisi',
                'verbose_name_plural': 'Kurs ishtirokchilari',
            },
        ),
        migrations.AddIndex(
            model_name='telegramuser',
            index=models.Index(fields=['telegram_id'], name='bot_telegra_telegra_3bed65_idx'),
        ),
        migrations.AddIndex(
            model_name='telegramuser',
            index=models.Index(fields=['phone_number'], name='bot_telegra_phone_n_d1660a_idx'),
        ),
        migrations.AddIndex(
            model_name='telegramuser',
            index=models.Index(fields=['referral_code'], name='bot_telegra_referra_fab217_idx'),
        ),
        migrations.AddIndex(
            model_name='telegramuser',
            index=models.Index(fields=['is_confirmed', 'registration_date'], name='bot_telegra_is_conf_f1919a_idx'),
        ),
        migrations.AddIndex(
            model_name='payments',
            index=models.Index(fields=['status', 'payment_date'], name='bot_payment_status_d4f4f9_idx'),
        ),
        migrations.AddIndex(
            model_name='payments',
            index=models.Index(fields=['user', 'course'], name='bot_payment_user_id_a94734_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['recipient', 'is_read'], name='bot_notific_recipie_1f5d1d_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['notification_type', 'created_at'], name='bot_notific_notific_e0f541_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='courseparticipant',
            unique_together={('user', 'course')},
        ),
    ]
